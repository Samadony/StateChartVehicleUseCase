# A sample Makefile for building Google Test and using it in user
# tests.  Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Please tweak the following variable definitions as needed by your
# project, except GMOCK_HEADERS, which you can use in your own targets
# but shouldn't modify.

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
GMOCK_DIR = .
GTEST_DIR = ../googletest
# Points to the location of the Google Test libraries
GMOCK_LIB_DIR = ../Export

# Where to find user code.
USER_DIR = samples

# Flags passed to the preprocessor.
# Set Google mock`s header directory as a system directory, such that
# the compiler doesn't generate warnings in Google mock headers.
CPPFLAGS += -isystem $(GMOCK_DIR)/include $(GTEST_DIR)/include

# Flags passed to the C++ compiler.
CXXFLAGS += -g -Wall -Wextra -pthread -std=c++11

# Google Test libraries
GMOCK_LIBS = libgmock.a libgmock_main.a

# All Google test headers, googlemock depends on google test headers to reduce 
# code duplication.  Usually you shouldn't change this definition.
GTEST_HEADERS = $(GTEST_DIR)/include/gtest/*.h \
                $(GTEST_DIR)/include/gtest/internal/*.h

# All Google mock headers.  Usually you shouldn't change this
# definition.
GMOCK_HEADERS = $(GMOCK_DIR)/include/gmock/*.h \
                $(GMOCK_DIR)/include/gmock/internal/*.h

# House-keeping build targets.

all : build 

build : export_lib export_headers

export_lib : $(GMOCK_LIBS) 
	cp $(GMOCK_LIBS) $(GMOCK_LIB_DIR)
	
export_headers : 
	cp -r $(GMOCK_DIR)/include $(GMOCK_LIB_DIR)

clean :
	rm -f $(GMOCK_LIBS) *.o $(addprefix $(GMOCK_LIB_DIR)/,$(GMOCK_LIBS))

# Builds gmock.a and gmock_main.a.

# Usually you shouldn't tweak such internal variables, indicated by a
# trailing _.
GMOCK_SRCS_ = $(GMOCK_DIR)/src/*.cc $(GMOCK_HEADERS)

# For simplicity and to avoid depending on Google Test's
# implementation details, the dependencies specified below are
# conservative and not optimized.  This is fine as Google Test
# compiles fast and for ordinary users its source rarely changes.
gmock-all.o :
	$(Q)$(CXX) $(CPPFLAGS) -I$(GMOCK_DIR) -I$(GTEST_DIR)/include $(CXXFLAGS) -c \
            $(GMOCK_DIR)/src/gmock-all.cc

gmock_main.o : 
	$(Q)$(CXX) $(CPPFLAGS) -I$(GMOCK_DIR) -I$(GTEST_DIR)/include $(CXXFLAGS) -c \
            $(GMOCK_DIR)/src/gmock_main.cc

libgmock.a : gmock-all.o
	$(Q)$(AR) $(ARFLAGS) $@ $^

libgmock_main.a : gmock-all.o gmock_main.o
	$(Q)$(AR) $(ARFLAGS) $@ $^
